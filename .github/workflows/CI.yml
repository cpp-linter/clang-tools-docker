name: CI

on:
  push:
    branches: [ master ]
    paths:
      - '**Dockerfile'
      - 'docker-bake.hcl'
  pull_request:
    branches: [ master ]
    paths:
      - '**Dockerfile'
      - 'docker-bake.hcl'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.8.0

      - name: Check formatting
        run: make install-deps && make lint

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v18.4

      - name: Login container registries
        run: |
          echo $CR_PAT | docker login ghcr.io -u shenxianpeng --password-stdin
          docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}'
        env:
          CR_PAT: ${{ secrets.CR_PAT }}

      - name: Build & Test Images
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == *"Dockerfile" ]]; then
              set -e
              tag=`dirname $file`
              echo "start to build clang-tools:$tag"
              docker buildx bake --file docker-bake.hcl clang-tools-$tag

              echo "start to test clang-tools:$tag"
              if [ $tag == "all" ]; then
                clang_versions="16 15 14 13 12 11 10 9 8"
                for clang_version in ${clang_versions}; do
                  docker run ghcr.io/cpp-linter/clang-tools:$tag clang-format-$clang_version --version | grep -E "clang-format version $clang_version"
                  docker run ghcr.io/cpp-linter/clang-tools:$tag clang-tidy-$clang_version --version | grep "LLVM version $clang_version"
                done
              elif [[ "$tag" == *"alpine"* ]]; then
                  docker run ghcr.io/cpp-linter/clang-tools:$tag-3.18 clang-format --version | grep -E "clang-format version"
                  docker run ghcr.io/cpp-linter/clang-tools:$tag-3.18 clang-tidy --version | grep "LLVM version"
              else
                docker run ghcr.io/cpp-linter/clang-tools:$tag clang-format --version | grep -E "clang-format version $tag"
                docker run ghcr.io/cpp-linter/clang-tools:$tag clang-tidy --version | grep "LLVM version $tag"
              fi
            fi
          done

      - name: Publish Images
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == *"Dockerfile" ]]; then
              tag=`dirname $file`
              docker buildx bake --file docker-bake.hcl --push clang-tools-$tag
            fi
          done

      - name: Publish All Images
        if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
        run: docker buildx bake --file docker-bake.hcl --push clang-tools
